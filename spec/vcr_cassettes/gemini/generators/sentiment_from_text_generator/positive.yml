---
http_interactions:
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":{"role":"user","parts":{"text":"        You have access
        to a set of tools to answer the prompt.\n\n        You may call tools like
        this:\n        <tool_calls>\n          <tool_call>\n            <tool_name>$TOOL_NAME</tool_name>\n            <parameters>\n              <$PARAMETER_NAME>$VALUE</$PARAMETER_NAME>\n              ...\n            </parameters>\n          </tool_call>\n        </tool_calls>\n\n        Here
        are the tools available:\n        <tools>\n          <tool_description>\n            <tool_name>sentiment_value</tool_name>\n            <tool_description>A
        sentiment value from the list</tool_description>\n            <parameters>\n              <name>sentiment_value</name><type>string</type><description>A
        sentiment value from the list</description><required>true</required><enum>[\"positive\",
        \"negative\", \"neutral\"]</enum>\n            </parameters>\n          </tool_description>\n        </tools>\n\n        Respond
        only with valid xml.\n        The entire response should be wrapped in a <response>
        tag.\n        Your response should call a tool inside a <tool_calls> tag.\n\n        You
        are an expert at determining sentiment from text.\n\n        You are tasked
        with analyzing the following text and determining its sentiment value.\n\n        The
        text is:\n        Matz is nice so we are nice\n"}}}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Wed, 15 May 2024 21:27:46 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=1777
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "candidates": [
            {
              "content": {
                "parts": [
                  {
                    "text": "\u003cresponse\u003e\n  \u003ctool_calls\u003e\n    \u003ctool_call\u003e\n      \u003ctool_name\u003esentiment_value\u003c/tool_name\u003e\n      \u003cparameters\u003e\n        \u003csentiment_value\u003epositive\u003c/sentiment_value\u003e\n      \u003c/parameters\u003e\n    \u003c/tool_call\u003e\n  \u003c/tool_calls\u003e\n\u003c/response\u003e"
                  }
                ],
                "role": "model"
              },
              "finishReason": "STOP",
              "index": 0,
              "safetyRatings": [
                {
                  "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
                  "probability": "NEGLIGIBLE"
                },
                {
                  "category": "HARM_CATEGORY_HATE_SPEECH",
                  "probability": "NEGLIGIBLE"
                },
                {
                  "category": "HARM_CATEGORY_HARASSMENT",
                  "probability": "NEGLIGIBLE"
                },
                {
                  "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
                  "probability": "NEGLIGIBLE"
                }
              ]
            }
          ],
          "usageMetadata": {
            "promptTokenCount": 302,
            "candidatesTokenCount": 73,
            "totalTokenCount": 375
          }
        }
  recorded_at: Wed, 15 May 2024 21:27:46 GMT
recorded_with: VCR 6.2.0
